public class LinearSearch {
   static int[] array = {1,5,8,4,3,2,7,6};

   public static int linearSearch(int key){
        for(int i = 0; i < array.length; i++){
            if(array[i] == key){
                return i;
            }
        }
       return -1;
    }

    public static void main(String[] args) {
        int key = 99;
        int result = linearSearch(key);
        System.out.println(result);
    }
}
/* 
Инвариант линейного поиска:
"Искомый элемент находится в подмассиве A[(i+1)...(n - 1)]"
1) В самом начале пусть i = 0 и искомый элемент находится в A[1...(n-1)]
2) Пусть после i = k утверждение выполняется: "Нужный элемент находится в A[(k+1)...(n-1)]". 
Рассмотрим i = k+1. Если в if не заходим, то A[k+1] не является искомым, и так как по предположению индукции нужный элемент находится в подмассиве A[(k+1)...(n-1)] => нужный элемент находится в подмассиве A[(k+2)...(n-1)] => утверждение
о том, что нужный элемент находится в подмассиве A[(i+1)...(n-1)] - верно (так как i = k+1 и i+1 = k+2)
3) В конце после выхода из цикла i = n; Если в if не зайдет при i = n-1, то нужный элемент находится в подмассиве
A[(n+1)...(n-1)], то есть его нет.
*/
